import numpy as np
import pandas as pd
import scipy.stats
"""
Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга
(ks): zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
Найдите ковариацию этих двух величин с помощью элементарных действий,
а затем с помощью функции cov из numpy Полученные значения должны быть равны.
Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков,
а затем с использованием функций из библиотек numpy и pandas.
"""

zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110]
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]

n_zp = len(zp) #10
n_ks = len(ks) #10

av_zp = sum(zp)/n_zp # 101.4
av_ks = sum(ks)/n_ks # 709.9

aver_zp_ks = sum([z * k for z, k in zip(zp, ks)])/len(zp)  # 81_141.7
covar = aver_zp_ks - av_ks * av_zp  # 9157.84

st_zp = (sum([(z - av_zp) ** 2 for z in zp])/n_zp) ** 0.5  # 62.3
st_ks = (sum([(k - av_ks) ** 2 for k in ks])/n_ks) ** 0.5  # 184

r_zp_ks = covar/(st_zp * st_ks)
print(f' Коэффициент корреляции Пирсмана = {r_zp_ks}')  # 0.8875

print(np.corrcoef(zp, ks))
#[[1.         0.88749009]
# [0.88749009 1.        ]]

df = pd.DataFrame({"zp": zp, "ks": ks})
print(df.corr())
#         zp       ks
#zp  1.00000  0.88749
#ks  0.88749  1.00000

"""
2. Измерены значения IQ выборки студентов, обучающихся в местных технических вузах: 
131, 125, 115, 122, 131, 115, 107, 99, 125, 111. Известно, что в генеральной совокупности IQ 
распределен нормально. Найдите доверительный интервал для математического ожидания с надежностью 0.95.
"""

data = [131, 125, 115, 122, 131, 115, 107, 99, 125, 111]
# Среднее значение выборки
av = sum(data) / len(data)
# Ср. квад. отклонение выборки
sigma = np.std(data, ddof=1)
# Табличное значение t критерия для a/2
t_cr = scipy.stats.t.ppf(0.975, len(data) - 1)
left = av - t_cr * sigma / pow(len(data), 0.5)
right = av + t_cr * sigma / pow(len(data), 0.5)
print(f'Интервал для истинного среднего = ({left:.2f}, {right:.2f})')
# Интервал для истинного среднего = (110.56, 125.64)

"""
3. Известно, что рост футболистов в сборной распределен нормально с дисперсией генеральной совокупности, 
равной 25 кв.см. Объем выборки равен 27, среднее выборочное составляет 174.2. 
Найдите доверительный интервал для математического ожидания с надежностью 0.95.
"""
d_gen = 25
st_gen = pow(d_gen, 0.5)
n = 27
X = 174.2

#find Z critical value
z = scipy.stats.norm.ppf(.975)
left = X - z * st_gen / pow(n, 0.5)
right = X + z * st_gen / pow(n, 0.5)
print(f'Интервал для сред. арифметического = ({left:.2f}, {right:.2f})')
# Интервал для сред. арифметического = (172.31, 176.09)

